// Copyright (c) 2025 Ziga Miklosic
// All Rights Reserved
// This software is under MIT licence (https://opensource.org/licenses/MIT)
////////////////////////////////////////////////////////////////////////////////
/**
*@file      thermistor_cfg.h
*@brief     Thermistor configurations
*@author    Ziga Miklosic
*@email     ziga.miklosic@gmail.com
*@date      01.02.2025
*@version   V1.2.0
*/
////////////////////////////////////////////////////////////////////////////////
/*!
* @addtogroup THERMISTOR_CFG
* @{ <!-- BEGIN GROUP -->
*/
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include <stdint.h>
#include <stdbool.h>
#include <stdlib.h>

#include "thermistor_cfg.h"
#include "thermistor/src/thermistor.h"

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
// Variables
////////////////////////////////////////////////////////////////////////////////

/**
 *      Thermistor configuration table
 *  
 *  @note   Following condition must be taken into account:
 *              
 *              1. lpf_fc > 0
 *              2. Valid HW configuration are: 
 *                  - eTH_HW_LOW_SIDE  with eTH_HW_PULL_UP
 *                  - eTH_HW_HIGH_SIDE with eTH_HW_PULL_DOWN
 *                  - eTH_HW_LOW_SIDE  with eTH_HW_PULL_BOTH
 *                  - eTH_HW_HIGH_SIDE with eTH_HW_PULL_BOTH
 *              3. Range: Max is larger that min value
 */
static const th_cfg_t g_th_cfg[eTH_NUM_OF] = 
{
    // USER CODE BEGIN...

	// NTC Configurations
	// ----------------------------------------------------------------------------------------------

    [eTH_ELEV_BRIDGE]	=
    {   
        // ADC channel
        .adc_ch = eADC_CH_ELEVATOR_TEMP,

        // HW configurations
        .hw =
        {
            .conn      = eTH_HW_HIGH_SIDE,
            .pull_mode = eTH_HW_PULL_DOWN,
            .pull_up   = 0.0f,
            .pull_down = 4.7e3f,
        },

        // NTC sensor
        .type = eTH_TYPE_NTC,
        .ntc =
        {
            .beta    = 3435.0f,      //25/85 degC
            .nom_val = 10e3f,
        },

        // Valid range
        .range =
        {
            .min = -25.0f,
            .max = 150.0f,
        },

        .lpf_fc     = 1.0f,
        .err_type   = eTH_ERR_FLOATING,
    },

    [eTH_DEL_BRIDGE]   =
    {
        // ADC channel
        .adc_ch = eADC_CH_DELIVERY_TEMP,

        // HW configurations
        .hw =
        {
            .conn      = eTH_HW_HIGH_SIDE,
            .pull_mode = eTH_HW_PULL_DOWN,
            .pull_up   = 0.0f,
            .pull_down = 4.7e3f,
        },

        // NTC sensor
        .type = eTH_TYPE_NTC,
        .ntc =
        {
            .beta    = 3435.0f,      //25/85 degC
            .nom_val = 10e3f,
        },

        // Valid range
        .range =
        {
            .min = -25.0f,
            .max = 150.0f,
        },

        .lpf_fc     = 1.0f,
        .err_type   = eTH_ERR_FLOATING,
    },

    [eTH_SLIDER_BRIDGE]   =
    {
        // ADC channel
        .adc_ch = eADC_CH_SLIDER_TEMP,

        // HW configurations
        .hw =
        {
            .conn      = eTH_HW_HIGH_SIDE,
            .pull_mode = eTH_HW_PULL_DOWN,
            .pull_up   = 0.0f,
            .pull_down = 4.7e3f,
        },

        // NTC sensor
        .type = eTH_TYPE_NTC,
        .ntc =
        {
            .beta    = 3435.0f,      //25/85 degC
            .nom_val = 10e3f,
        },

        // Valid range
        .range =
        {
            .min = -25.0f,
            .max = 150.0f,
        },

        .lpf_fc     = 1.0f,
        .err_type   = eTH_ERR_FLOATING,
    },

    [eTH_AMBIENT]   =
    {
        // ADC channel
        .adc_ch = eADC_CH_AMBIENT_TEMP,

        // HW configurations
        .hw =
        {
            .conn      = eTH_HW_HIGH_SIDE,
            .pull_mode = eTH_HW_PULL_DOWN,
            .pull_up   = 0.0f,
            .pull_down = 4.7e3f,
        },

        // NTC sensor
        .type = eTH_TYPE_NTC,
        .ntc =
        {
            .beta    = 3435.0f,      //25/85 degC
            .nom_val = 10e3f,
        },

        // Valid range
        .range =
        {
            .min = -25.0f,
            .max = 150.0f,
        },

        .lpf_fc     = 1.0f,
        .err_type   = eTH_ERR_FLOATING,
    },

    // USER CODE END...
};

////////////////////////////////////////////////////////////////////////////////
// Functions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/**
*		Get thermistor configuration table
*
* @return		pointer to configuration table
*/
////////////////////////////////////////////////////////////////////////////////
const th_cfg_t * th_cfg_get_table(void)
{
	return (th_cfg_t*) &g_th_cfg;
}

////////////////////////////////////////////////////////////////////////////////
/**
* @} <!-- END GROUP -->
*/
////////////////////////////////////////////////////////////////////////////////
